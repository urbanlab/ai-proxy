services:
  api:
    image: erasme/ai-proxy:latest
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ai-proxy-backend
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
    volumes:
      - ./data:/data
      - ./backend:/app
      - ./config.yaml:/config.yaml

    # SQLite Prometheus Exporter
  prometheus-exporter:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    volumes:
      - ./backend:/app
      - ./data:/data
    depends_on:
      - api
    command: ["python", "exporter.py", "--db-path", "/data/requests.db", "--port", "8001"]
  
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'


  # Grafana
  grafana:
    image: grafana/grafana:latest
    ports:
      - "4000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning

  openwebui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: openwebui
    ports:
      - "3000:8080"
    volumes:
      - ./data/openwebui_data:/app/backend/data


volumes:
  grafana-storage: